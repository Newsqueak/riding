/^\w+@(\w+\.)+\w+$/i
/^\d{2,}$/i

Person
      .find({ occupation: /host/ })
      .where('name.last').equals('Ghost')
      .where('age').gt(17).lt(66)
      .where('likes').in(['vaporizing', 'talking'])
      .limit(10)
      .sort('-occupation')
      .select('name occupation')
      .exec(callback);

4个点，3条边

var openUserSchema = new Schema({
  _id: {type: String, required: true},
  name: {type: String, default: ""},
  authToken: { type: String, default: "" },
  provider: { type: String, required: true },
  avatar_url: { type: String, default: ""}
}, {versionKey : false});


var localUserSchema = new Schema({
     _id: {type: String, required: true},
    un: { type: String, required: true, index: { unique: true, sparse: true }},
    email: { type: String, default: "" },
    phone: {type: String, default: "" },
    name: { type: String, default: "" },
    provider: { type: String, default: "local" },
    hashed_password: { type: String, default: "" },
    salt: { type: String, default: "" },
    authToken: { type: String, default: ""},
    avatar_url: { type: String, default: ""}

}, {versionKey : false});


var counterSchema = new Schema({
      _id: {type: String, required: true},
      c: {type: Number, default: 0}
}, {versionKey : false});



var activitySchema = new Schema({
     _id: {type: Number, required: true},
     ct: {type: String, default: "Beijing, China", index: true},
     bgimg: {type: String, default: ""},
     stdate: {type: Date, default: Date.now},
     enddate: {type: Date, default: Date.now},
     deadline: {type: Date, default: Date.now},
     rgstnum: {type: Number, default: 0},
     totalmile: {type: Number, default: 0},
     desc: {type: String, default: ""},
     title: {type: String, default: ""},
     brief: {type: String, default: ""}

}, {versionKey: false});

var userActivRsSchema = new Schema({
    _id: {type: Schema.Types.Mixed, required: true},
    avespeed: {type: Number, default: 0.1},
    dmile: {type: Number, default: 0},
    isrgst: {type: Boolean, default: false},
    t: {type: Schema.Types.Long, required: true}

}, {versionKey: false});


var userSportRsSchema = new Schema({
      _id: {type: Schema.Types.Mixed, required: true},
     totalmile:  {type: Number, default: 0},
     avespeed:  {type: Number, default: 0.1},
     t: {type: Schema.Types.Long, required: true}
}, {versionKey: false});


var pointSchema = new Schema({
      lon: {type: Number, default: 0.1},
      lat: {type: Number, default: 0.1},
     degree: {type: Number, default: 0.1},
     speed: {type: Number, default: 0.1}

}, {versionKey: false});

var trackSchema = new Schema({
     _id: {type: Schema.Types.Mixed, required: true},
     rider: {
           name: {type: String, default: ""},
           totalmile:  {type: Number, default: 0},
           avespeed:  {type: Number, default: 0.1},
           avatar_url: {type: String, default: ""}
    },
    miles: {type: Number, default: 0},
    date: {type: Date, default: Date.now},
    likenum: {type: Number, default: 0},
   commentnum: {type: Number, default: 0},
   points: [pointSchema]
}, {versionKey: false});

var  remarkTrackRsSchema = new Schema({
     _id: {type: Schema.Types.Mixed, required: true},
     isliked: {type: Boolean, default: false},
     comment: {type: String, default: ""},
     t: {type: Schema.Types.Long, required: true}

}, {versionKey: false});

